# Form implementation generated from reading ui file 'update_dialog.ui'
#
# Created by: PyQt6 UI code generator 6.8.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtGui import QIcon, QPixmap
from PyQt6.QtWidgets import QTableWidgetItem, QFileDialog, QPushButton

import os
import json

class Ui_updateDialog(object):
    def setupUi(self, updateDialog):
        updateDialog.setObjectName("updateDialog")
        updateDialog.resize(676, 443)
        self.centralwidget = QtWidgets.QWidget(parent=updateDialog)
        self.centralwidget.setObjectName("centralwidget")
        self.frame = QtWidgets.QFrame(parent=self.centralwidget)
        self.frame.setGeometry(QtCore.QRect(0, 0, 681, 441))
        self.frame.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame.setObjectName("frame")
        self.urlFrame = QtWidgets.QFrame(parent=self.frame)
        self.urlFrame.setGeometry(QtCore.QRect(0, 10, 255, 38))
        self.urlFrame.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.urlFrame.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.urlFrame.setObjectName("urlFrame")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.urlFrame)
        self.horizontalLayout_5.setContentsMargins(-1, -1, 0, -1)
        self.horizontalLayout_5.setSpacing(20)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.widget_4 = QtWidgets.QWidget(parent=self.urlFrame)
        self.widget_4.setObjectName("widget_4")
        self.titleLabel = QtWidgets.QLabel(parent=self.widget_4)
        self.titleLabel.setGeometry(QtCore.QRect(10, -10, 100, 31))
        self.titleLabel.setMinimumSize(QtCore.QSize(100, 0))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.titleLabel.setFont(font)
        self.titleLabel.setObjectName("titleLabel")
        self.titleInput = QtWidgets.QLineEdit(parent=self.widget_4)
        self.titleInput.setGeometry(QtCore.QRect(70, 0, 181, 19))
        self.titleInput.setMaximumSize(QtCore.QSize(200, 16777215))
        self.titleInput.setObjectName("titleInput")
        self.horizontalLayout_5.addWidget(self.widget_4)
        self.widget = QtWidgets.QWidget(parent=self.frame)
        self.widget.setGeometry(QtCore.QRect(430, 60, 234, 36))
        self.widget.setObjectName("widget")
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.widget)
        self.horizontalLayout_6.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.urlLabel = QtWidgets.QLabel(parent=self.widget)
        self.urlLabel.setMinimumSize(QtCore.QSize(100, 0))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.urlLabel.setFont(font)
        self.urlLabel.setObjectName("urlLabel")
        self.horizontalLayout_6.addWidget(self.urlLabel)
        self.radioButton_3 = QtWidgets.QRadioButton(parent=self.widget)
        self.radioButton_3.setObjectName("radioButton_3")
        self.horizontalLayout_6.addWidget(self.radioButton_3)
        self.radioButton_2 = QtWidgets.QRadioButton(parent=self.widget)
        self.radioButton_2.setObjectName("radioButton_2")
        self.horizontalLayout_6.addWidget(self.radioButton_2)
        self.widget_2 = QtWidgets.QWidget(parent=self.frame)
        self.widget_2.setGeometry(QtCore.QRect(430, 10, 224, 41))
        self.widget_2.setObjectName("widget_2")
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout(self.widget_2)
        self.horizontalLayout_7.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.imageLabel = QtWidgets.QLabel(parent=self.widget_2)
        self.imageLabel.setMinimumSize(QtCore.QSize(100, 0))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.imageLabel.setFont(font)
        self.imageLabel.setObjectName("imageLabel")
        self.horizontalLayout_7.addWidget(self.imageLabel)
        self.uploadImgButton = QtWidgets.QToolButton(parent=self.widget_2)
        self.uploadImgButton.setMinimumSize(QtCore.QSize(100, 0))
        self.uploadImgButton.setMaximumSize(QtCore.QSize(100, 16777215))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.uploadImgButton.setFont(font)
        self.uploadImgButton.setCheckable(True)
        self.uploadImgButton.setAutoExclusive(True)
        self.uploadImgButton.setObjectName("uploadImgButton")
        self.horizontalLayout_7.addWidget(self.uploadImgButton)
        self.buttonBox = QtWidgets.QDialogButtonBox(parent=self.frame)
        self.buttonBox.setGeometry(QtCore.QRect(490, 170, 181, 24))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.buttonBox.setFont(font)
        self.buttonBox.setOrientation(QtCore.Qt.Orientation.Horizontal)
        self.buttonBox.setObjectName("buttonBox")

        # Tạo các nút tùy chỉnh
        self.updateButton = QPushButton("Update")
        self.deleteButton = QPushButton("Delete")
        self.buttonBox.addButton(self.updateButton, QtWidgets.QDialogButtonBox.ButtonRole.AcceptRole)
        self.buttonBox.addButton(self.deleteButton, QtWidgets.QDialogButtonBox.ButtonRole.RejectRole)

        self.widget_3 = QtWidgets.QWidget(parent=self.frame)
        self.widget_3.setGeometry(QtCore.QRect(230, 110, 261, 41))
        self.widget_3.setObjectName("widget_3")
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout(self.widget_3)
        self.horizontalLayout_8.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.ratingLabel = QtWidgets.QLabel(parent=self.widget_3)
        self.ratingLabel.setMinimumSize(QtCore.QSize(100, 0))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.ratingLabel.setFont(font)
        self.ratingLabel.setObjectName("ratingLabel")
        self.horizontalLayout_8.addWidget(self.ratingLabel)
        self.comboBox = QtWidgets.QComboBox(parent=self.widget_3)
        self.comboBox.setInsertPolicy(QtWidgets.QComboBox.InsertPolicy.InsertBeforeCurrent)
        self.horizontalLayout_8.addWidget(self.ratingLabel)
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.horizontalLayout_8.addWidget(self.comboBox)
        self.widget_5 = QtWidgets.QWidget(parent=self.frame)
        self.widget_5.setGeometry(QtCore.QRect(10, 60, 261, 37))
        self.widget_5.setObjectName("widget_5")
        self.horizontalLayout_9 = QtWidgets.QHBoxLayout(self.widget_5)
        self.horizontalLayout_9.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_9.setObjectName("horizontalLayout_9")
        self.releasedateLabel = QtWidgets.QLabel(parent=self.widget_5)
        self.releasedateLabel.setMinimumSize(QtCore.QSize(100, 0))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.releasedateLabel.setFont(font)
        self.releasedateLabel.setObjectName("releasedateLabel")
        self.horizontalLayout_9.addWidget(self.releasedateLabel)
        self.releasedateInput = QtWidgets.QDateEdit(parent=self.widget_5)
        self.releasedateInput.setMaximumSize(QtCore.QSize(200, 16777215))
        self.releasedateInput.setObjectName("releasedateInput")
        self.horizontalLayout_9.addWidget(self.releasedateInput)
        self.tableWidget = QtWidgets.QTableWidget(parent=self.frame)
        self.tableWidget.setGeometry(QtCore.QRect(0, 210, 671, 221))
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(0)
        self.tableWidget.setRowCount(0)
        self.pushButton = QtWidgets.QPushButton(parent=self.frame)
        self.pushButton.setGeometry(QtCore.QRect(380, 170, 81, 21))
        self.pushButton.setObjectName("pushButton")
        self.lineEdit_3 = QtWidgets.QLineEdit(parent=self.frame)
        self.lineEdit_3.setGeometry(QtCore.QRect(0, 170, 371, 20))
        self.lineEdit_3.setObjectName("lineEdit_3")
        updateDialog.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(parent=updateDialog)
        self.statusbar.setObjectName("statusbar")
        updateDialog.setStatusBar(self.statusbar)

        self.retranslateUi(updateDialog)
        self.comboBox.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(updateDialog)

        self.updateButton.clicked.connect(self.update_data)
        self.deleteButton.clicked.connect(self.delete_data)
        self.uploadImgButton.clicked.connect(self.upload_image)
        self.tableWidget.cellClicked.connect(self.load_data_to_form)

        self.hien_thi_du_lieu("")

    def retranslateUi(self, updateDialog):
        _translate = QtCore.QCoreApplication.translate
        updateDialog.setWindowTitle(_translate("updateDialog", "MainWindow"))
        self.titleLabel.setText(_translate("updateDialog", "Name"))
        self.urlLabel.setText(_translate("updateDialog", "Sex"))
        self.radioButton_3.setText(_translate("updateDialog", "Female"))
        self.radioButton_2.setText(_translate("updateDialog", "Male"))
        self.imageLabel.setText(_translate("updateDialog", "Image"))
        self.uploadImgButton.setText(_translate("updateDialog", "Browse"))
        self.ratingLabel.setText(_translate("updateDialog", "Type of your pet"))
        self.comboBox.setItemText(0, _translate("updateDialog", "Dog"))
        self.comboBox.setItemText(1, _translate("updateDialog", "Cat"))
        self.comboBox.setItemText(2, _translate("updateDialog", "Bird"))
        self.comboBox.setItemText(3, _translate("updateDialog", "Fish"))
        self.comboBox.setItemText(4, _translate("updateDialog", "Other"))
        self.releasedateLabel.setText(_translate("updateDialog", "Birthday"))
        self.pushButton.setText(_translate("updateDialog", "Search"))

    def hien_thi_du_lieu(self, data):
        # Đọc dữ liệu từ file data.json
        file_path = os.path.join(os.path.dirname(__file__), '..', 'data', 'data.json')
        with open(file_path, 'r') as file:
            data = json.load(file)

        pets = data.get("pets", [])
        
        # Thiết lập số hàng và số cột
        self.tableWidget.setRowCount(len(data["pets"]))
        self.tableWidget.setColumnCount(5)
        self.tableWidget.setHorizontalHeaderLabels(["Image", "Name", "Birthday", "Type", "Sex"])

        # Thiết lập chiều rộng và chiều cao của cột và hàng
        self.tableWidget.setColumnWidth(0, 50)  # Cột hình ảnh rộng hơn
        self.tableWidget.verticalHeader().setDefaultSectionSize(100)  # Chiều cao hàng lớn hơn

        
        # Hiển thị dữ liệu lên tableWidget
        for i, pet in enumerate(pets):
            # Tải hình ảnh và phóng to sao cho chiếm toàn bộ không gian của ô
            pixmap = QPixmap(pet["image"])

            # Phóng to hình ảnh sao cho vừa với kích thước cột và hàng
            pixmap = pixmap.scaled(
                self.tableWidget.columnWidth(0),  # Đặt chiều rộng cột làm kích thước phóng to
                self.tableWidget.rowHeight(i),    # Đặt chiều cao hàng làm kích thước phóng to
                QtCore.Qt.AspectRatioMode.KeepAspectRatioByExpanding,  # Phóng to giữ tỷ lệ
                QtCore.Qt.TransformationMode.SmoothTransformation
            )
            # Tạo icon từ pixmap và thiết lập vào item của cột 0
            icon = QIcon(pixmap)
            item = QtWidgets.QTableWidgetItem()
            item.setIcon(icon)
            item.setFlags(QtCore.Qt.ItemFlag.ItemIsEnabled)  # Ngăn chỉnh sửa ô
            self.tableWidget.setItem(i, 0, item)
            self.tableWidget.setItem(i, 1, QTableWidgetItem(pet.get("name", "")))
            self.tableWidget.setItem(i, 2, QTableWidgetItem(pet.get("birthday", "")))
            self.tableWidget.setItem(i, 3, QTableWidgetItem(pet.get("type", "")))
            self.tableWidget.setItem(i, 4, QTableWidgetItem(pet.get("sex", "")))

    def load_data_to_form(self, row, column):
        # Lấy dữ liệu từ dòng được chọn
        name = self.tableWidget.item(row, 1).text()
        birthday = self.tableWidget.item(row, 2).text()
        pet_type = self.tableWidget.item(row, 3).text()
        sex = self.tableWidget.item(row, 4).text()

        # Đẩy dữ liệu lên các ô nhập liệu
        self.titleInput.setText(name)
        self.releasedateInput.setDate(QtCore.QDate.fromString(birthday, "dd/MM/yyyy"))
        self.comboBox.setCurrentText(pet_type)
        if sex == "Male":
            self.radioButton_2.setChecked(True)
        elif sex == "Female":
            self.radioButton_3.setChecked(True)

    def update_data(self):
        # Lấy chỉ số dòng được chọn
        selected_row = self.tableWidget.currentRow()

        if selected_row >= 0:
            # Lấy dữ liệu từ các ô nhập liệu
            name = self.titleInput.text()
            birthday = self.releasedateInput.date().toString("dd/MM/yyyy")  # Lấy ngày từ QDateEdit
            pet_type = self.comboBox.currentText()
            sex = "Female" if self.radioButton_3.isChecked() else "Male"  # Kiểm tra xem radio button nào được chọn
            image = getattr(self, "image_path", "")
            # Cập nhật dữ liệu vào bảng
            self.tableWidget.item(selected_row, 0).setIcon(QIcon(image))
            self.tableWidget.item(selected_row, 1).setText(name)
            self.tableWidget.item(selected_row, 2).setText(birthday)
            self.tableWidget.item(selected_row, 3).setText(pet_type)
            self.tableWidget.item(selected_row, 4).setText(sex)

            # Cập nhật dữ liệu trong file data.json
            file_path = os.path.join(os.path.dirname(__file__), '..', 'data', 'data.json')
            with open(file_path, 'r') as file:
                data = json.load(file)

            # Cập nhật thông tin pet trong dữ liệu
            pets = data.get("pets", [])
            selected_pet = pets[selected_row]
            selected_pet["image"] = image
            selected_pet["name"] = name
            selected_pet["birthday"] = birthday
            selected_pet["type"] = pet_type
            selected_pet["sex"] = sex

            # Lưu lại dữ liệu vào file
            with open(file_path, 'w') as file:
                json.dump(data, file, indent=4)

            print(f"Updated pet {name} at row {selected_row}")

    def delete_data(self):
        # Lấy chỉ số dòng được chọn
        selected_row = self.tableWidget.currentRow()

        if selected_row >= 0:
            # Xóa dữ liệu trong bảng
            self.tableWidget.removeRow(selected_row)

            # Xóa dữ liệu trong file data.json
            file_path = os.path.join(os.path.dirname(__file__), '..', 'data', 'data.json')
            with open(file_path, 'r') as file:
                data = json.load(file)

            # Xóa thông tin pet trong dữ liệu
            pets = data.get("pets", [])
            pets.pop(selected_row)

            # Lưu lại dữ liệu vào file
            with open(file_path, 'w') as file:
                json.dump(data, file, indent=4)

            print(f"Deleted pet at row {selected_row}")

    def upload_image(self):
        """Mở hộp thoại chọn ảnh và lưu đường dẫn."""
        file_dialog = QFileDialog()
        file_path, _ = file_dialog.getOpenFileName(filter="Images (*.png *.jpg *.jpeg *.bmp)")
        if file_path:
            self.image_path = file_path  # Lưu đường dẫn ảnh vào thuộc tính
        else:
            self.image_path = ""

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    updateDialog = QtWidgets.QMainWindow()
    ui = Ui_updateDialog()
    ui.setupUi(updateDialog)
    updateDialog.show()
    sys.exit(app.exec())